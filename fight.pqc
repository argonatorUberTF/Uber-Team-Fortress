float(float v) anglemod;
void(vector dest) ChooseTurn;
void() ai_face;
float() CheckAttack = 
{
	local vector spot1;
	local vector spot2;
	local entity targ;
	local float chance;
	targ = self.enemy;
	spot1 = self.origin + self.view_ofs;
	spot2 = targ.origin + targ.view_ofs;
	traceline(spot1, spot2, TF_FLARE_LIT, self);
#ifdef mtf_coop_expsys
	if (self.enemy == self.owner && self.enemy.team_no == self.team_no) {
		return 0;
	}
#endif
	if (trace_ent != targ)
	{
		return TF_FLARE_LIT;
	}
	if (trace_inopen && trace_inwater)
	{
		return TF_FLARE_LIT;
	}
#ifdef mtf_coop
	if (enemy_range == TF_FLARE_LIT || self.enemy.classname == "func_monstergoal")
#else
	if (enemy_range == TF_FLARE_LIT)
#endif
	{
		if (self.th_melee)
		{
			self.th_melee();
			return TF_FLARE_OFF;
		}
	}
	if (!(self.th_missile))
	{
		return TF_FLARE_LIT;
	}
	if (time < self.attack_finished)
	{
		return TF_FLARE_LIT;
	}
	if (enemy_range == 3)
	{
		return TF_FLARE_LIT;
	}
	if (enemy_range == TF_FLARE_LIT)
	{
		chance = 0.9;
		self.attack_finished = TF_FLARE_LIT;
	}
	else
	{
		if (enemy_range == TF_FLARE_OFF)
		{
			if (self.th_melee)
			{
				chance = 0.2;
			}
			else
			{
				chance = 0.4;
			}
		}
		else
		{
			if (enemy_range == 2)
			{
				if (self.th_melee)
				{
					chance = 0.05;
				}
				else
				{
					chance = 0.1;
				}
			}
			else
			{
				chance = TF_FLARE_LIT;
			}
		}
	}
	if (random() < chance)
	{
		self.th_missile();
		SUB_AttackFinished(2 * random());
		return TF_FLARE_OFF;
	}
	return TF_FLARE_LIT;
};
void(float d) ai_charge = 
{
	ai_face();
	movetogoal(d);
};

void() ai_charge_side = 
{
	local vector dtemp;
	local float heading;
	self.ideal_yaw = vectoyaw(self.enemy.origin - self.origin);
	ChangeYaw();
	makevectors(self.angles);
	dtemp = self.enemy.origin - 30 * v_right;
	heading = vectoyaw(dtemp - self.origin);
	walkmove(heading, 20);
};
void() ai_melee = 
{
	local vector delta;
	local float ldmg;
	if (!(self.enemy))
	{
		return;
	}
	delta = self.enemy.origin - self.origin;
	if (vlen(delta) > 60)
	{
		return;
	}
	ldmg = (random() + random() + random()) * 3;
#ifdef mtf_coop_nehahra
	local float num;
	if ((self.classname == "monster_cook"))
	{
		num = random ();
		ldmg = ldmg + 10;
		if ((ldmg > self.enemy.health))
		{
			sound (self, CHAN_VOICE, "cook/dpong.wav", 1, ATTN_IDLE);
		}
		else
		{
			if ((num < 0.3))
			{
				sound (self, CHAN_BODY, "cook/ping1.wav", 1, ATTN_IDLE);
			}
			else
			{
				if ((num < 0.7))
				{
					sound (self, CHAN_VOICE, "cook/ping2.wav", 1, ATTN_IDLE);
				}
				else
				{
					sound (self, CHAN_AUTO, "cook/pong1.wav", 1, ATTN_IDLE);
				}
			}
		}
	}
#endif
	T_Damage(self.enemy, self, self, ldmg);
};
void() ai_melee_side = 
{
	local vector delta;
	local float ldmg;
	if (!(self.enemy))
	{
		return;
	}
	ai_charge_side();
	delta = self.enemy.origin - self.origin;
	if (vlen(delta) > 60)
	{
		return;
	}
	if (!CanDamage(self.enemy, self))
	{
		return;
	}
	ldmg = (random() + random() + random()) * 3;
	T_Damage(self.enemy, self, self, ldmg);
};
//END
