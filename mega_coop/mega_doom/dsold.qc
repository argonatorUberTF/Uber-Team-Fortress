void () dsold_fire;void () dsold_check_frame ={	if (self.frame >= 0 && self.frame <= 17)			/* idle */	{			}	else if (self.frame >= 39 && self.frame <=  54)  	/* walk and run */	{	}	else if (self.frame >= 55 && self.frame <=  58)  	/* attacking */	{	}	else if (self.frame >= 17 && self.frame <=  32)  	/* death */	{	}	else if (self.frame >= 33 && self.frame <=  38)  	/* pain */	{	}	self.oframe = self.frame;	doom_ai_sprite_orient(48);	self.nextthink = time + 0.1;};void () dsold_stand1 = [ 0, dsold_stand2 ]{	dsold_check_frame();	ai_stand (); 	if ((random () < 0.4))	{		sound (self, CHAN_VOICE, "doom_soldier/nearby.wav", TRUE, ATTN_IDLE); 	}};void () dsold_stand2 = [ 8, dsold_stand3 ]{	dsold_check_frame();	ai_stand (); };void () dsold_stand3 = [ 16, dsold_stand1 ]{dsold_check_frame();	ai_stand (); };void () dsold_walk1 = [ 0, dsold_walk2 ]{dsold_check_frame();	if ((random () < 0.4))	{		sound (self, CHAN_VOICE, "doom_soldier/nearby.wav", TRUE, ATTN_IDLE);	}	ai_walk (5 + TRUE); };void () dsold_walk2 = [ 8, dsold_walk3 ]{dsold_check_frame();	ai_walk (5 + TRUE); };void () dsold_walk3 = [ 16, dsold_walk4 ]{dsold_check_frame();	ai_walk (5 + TRUE); };void () dsold_walk4 = [ 24, dsold_walk5 ]{dsold_check_frame();	ai_walk (5 + TRUE); };void () dsold_walk5 = [ 16, dsold_walk6 ]{dsold_check_frame();	ai_walk (5 + FL_SWIM); };void () dsold_walk6 = [ 8, dsold_walk1 ]{dsold_check_frame();	ai_walk (5 + MOVETYPE_WALK); };void () dsold_run1 = [ 0, dsold_run2 ]{dsold_check_frame();	ai_run (5 + FL_SWIM); };void () dsold_run2 = [ 8, dsold_run3 ]{dsold_check_frame();	ai_run (5 + MOVETYPE_FLY); 	 };void () dsold_run3 = [ 16, dsold_run4 ]{dsold_check_frame();	ai_run (5 + MOVETYPE_STEP); 	 };void () dsold_run4 = [ 24, dsold_run1 ]{dsold_check_frame();	ai_run (5 + MOVETYPE_WALK); 	 };void () dsold_run5 = [ 16, dsold_run6 ]{dsold_check_frame();	ai_run (5 + MOVETYPE_STEP); 	 };void () dsold_run6 = [ 8, dsold_run1 ]{dsold_check_frame();	ai_run (5 + MOVETYPE_STEP); 	};void () dsold_atk1 = [ 32, dsold_atk2 ]{dsold_check_frame();	ai_face (); };void () dsold_atk2 = [ 32, dsold_atk3 ]{dsold_check_frame();	ai_face (); };void () dsold_atk3 = [ 40, dsold_atk4 ]{dsold_check_frame();	ai_face (); };void () dsold_atk4 = [ 40, dsold_run1 ]{dsold_check_frame();	ai_face (); 	dsold_fire (); };void () dsold_pain1 = [ 48, dsold_pain2 ]{	dsold_check_frame();};void () dsold_pain2 = [ 48, dsold_run1 ]{	dsold_check_frame();};void () dsold_run ={	local float r;	r = random (); 	if ((r < 0.36))	{		sound (self, CHAN_VOICE, "doom_soldier/site1.wav", TRUE, ATTN_IDLE); 	}	else	{		if ((r < 0.67))		{			sound (self, CHAN_VOICE, "doom_soldier/site2.wav", TRUE, ATTN_IDLE); 		}		else		{			if ((r < TRUE))			{				sound (self, CHAN_VOICE, "doom_soldier/site3.wav", TRUE, ATTN_IDLE); 			}		}	}	dsold_run1 (); };void (entity attacker, float damage) dsold_pain ={	if ((self.pain_finished > time))	{		return;	}	self.pain_finished = (time + 2.5);	dsold_pain1 (); 	sound (self, CHAN_VOICE, "doom_soldier/pain.wav", TRUE, ATTN_NORM); };void () dsold_fire ={	local vector dir;	local entity en;	ai_face (); 	sound (self, CHAN_WEAPON, "weapons/pistol.wav", TRUE, ATTN_NORM); 	en = self.enemy;	dir = (en.origin - (en.velocity * 0.2)); 	dir = normalize ((dir - self.origin)); 	FireBullets (TRUE, dir, '0.1 0.1 0'); };void () dsold_die1 = [ 49, dsold_die2 ]{dsold_check_frame();	self.solid = SOLID_NOT;	self.ammo_nails = MOVETYPE_FLY;	DropClip (); };void () dsold_die2 = [ 50, dsold_die3 ]{dsold_check_frame();};void () dsold_die3 = [ 51, dsold_die4 ]{dsold_check_frame();};void () dsold_die4 = [ 52, dsold_die5 ]{dsold_check_frame();};void () dsold_die5 = [ 53, dsold_die5 ]{dsold_check_frame();};void () dsold_gib1 = [ 54, dsold_gib2 ]{dsold_check_frame();	self.solid = SOLID_NOT;	self.ammo_nails = MOVETYPE_FLY;	DropClip (); };void () dsold_gib2 = [ 55, dsold_gib3 ]{dsold_check_frame();};void () dsold_gib3 = [ 56, dsold_gib4 ]{dsold_check_frame();};void () dsold_gib4 = [ 57, dsold_gib5 ]{dsold_check_frame();};void () dsold_gib5 = [ 58, dsold_gib6 ]{dsold_check_frame();};void () dsold_gib6 = [ 59, dsold_gib7 ]{dsold_check_frame();};void () dsold_gib7 = [ 60, dsold_gib8 ]{dsold_check_frame();};void () dsold_gib8 = [ 61, dsold_gib9 ]{dsold_check_frame();};void () dsold_gib9 = [ 62, dsold_gib9 ]{dsold_check_frame();};void () dsold_die ={	local float r;	if ((self.health < -65))	{		sound (self, CHAN_VOICE, "action/gibs.wav", TRUE, ATTN_NORM); 		dsold_gib1 (); 		return;	}		r = random (); 	if ((r < 0.34))	{		sound (self, CHAN_VOICE, "doom_soldier/die1.wav", TRUE, ATTN_NORM); 	}	else	{		if ((r < 0.67))		{			sound (self, CHAN_VOICE, "doom_soldier/die2.wav", TRUE, ATTN_NORM); 		}		else		{			if ((r < TRUE))			{				sound (self, CHAN_VOICE, "doom_soldier/die3.wav", TRUE, ATTN_NORM); 			}		}	}	dsold_die1 (); };void () monster_dsold1 ={	self.solid = SOLID_SLIDEBOX;	self.movetype = MOVETYPE_STEP;	setmodel (self, "sprites/doom/doomg.spr");	setsize (self, VEC_HULL_MIN, VEC_HULL_MAX);	self.health = 20;	self.th_stand = dsold_stand1;	self.th_run = dsold_run;	self.th_walk = dsold_walk1;	self.th_missile = dsold_atk1;	self.th_pain = dsold_pain;	self.th_die = dsold_die;	MTF_Setup_Monster_Postsets( self.health, coop_walkmonster_start);};void () monster_dsold ={	if (deathmatch)	{		remove (self);		return;	}	precache_model ("sprites/doom/doomg.spr");	precache_sound ("doom_soldier/die1.wav");	precache_sound ("doom_soldier/die2.wav");	precache_sound ("doom_soldier/die3.wav");	precache_sound ("doom_soldier/nearby.wav");	precache_sound ("doom_soldier/pain.wav");	precache_sound ("action/gibs.wav");	precache_sound ("doom_soldier/site1.wav");	precache_sound ("doom_soldier/site2.wav");	precache_sound ("doom_soldier/site3.wav");	precache_sound ("player/udeath.wav");	precache_sound ("weapons/pistol.wav");	MTF_Setup_Monster_Presets ( 0, "Doom Grunt", monster_dsold1 );};//END