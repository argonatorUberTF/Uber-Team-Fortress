void () DropClip ={};void () DropShot ={};void(float max_orient_frame) doom_ai_sprite_orient ={	local entity	clienta, closest_client;	local float		tmpang, totang, best_client_dist;	best_client_dist = 9999;	if (self.oframe >= max_orient_frame)			return;	if (self.oframe >= 64 || self.frame >= 64)			return;	clienta = find(world, classname, "player");	while (clienta)		{			if (coop_visible(self, clienta))				break;			if (vlen (self.origin - clienta.origin) < best_client_dist)			{				best_client_dist = vlen (self.origin - clienta.origin);				closest_client = clienta;			}			clienta = find(clienta, classname, "player");		}		if (!clienta)		{			if (!closest_client)				return;			else				clienta = closest_client;		}		tmpang = mathlib_anglemod(clienta.angles_y);		totang = mathlib_anglemod(self.angles_y - tmpang);		if (totang < 157.5 && totang >= 112.5)			self.frame = self.frame + 1;		else		if (totang < 112.5 && totang >= 67.5)			self.frame = self.frame + 2;		else		if (totang < 67.5 && totang >= 22.5)			self.frame = self.frame + 3;		else		if (totang < 22.5 || totang >= 337.5)			self.frame = self.frame + 4;		else		if (totang < 337.5 && totang >= 292.5)			self.frame = self.frame + 5;		else		if (totang < 292.5 && totang >= 247.5)			self.frame = self.frame + 6;		else		if (totang < 247.5 && totang >= 202.5)			self.frame = self.frame + 7;};void () doom_barrel_think ={	if (self.frame == 0)		self.frame = 1;	else		self.frame = 0;	self.think = doom_barrel_think;	self.nextthink = time + 0.3;};void () doom_barrel_die6 ={	dremove(self);};void () doom_barrel_die5 = [ 6, doom_barrel_die6 ]{};void () doom_barrel_die4 = [ 5, doom_barrel_die5 ]{};void () doom_barrel_die3 = [ 4, doom_barrel_die4 ]{};void () doom_barrel_die2 = [ 3, doom_barrel_die3 ]{};void () doom_barrel_die1 = [ 2, doom_barrel_die2 ]{};void () doom_barrel_die ={	local float v1, v2;	sound (self, CHAN_VOICE, self.noise1, 1, ATTN_NORM);	self.th_die = SUB_Null;	self.takedamage = 0;	self.solid = SOLID_NOT;	self.movetype = MOVETYPE_FLYMISSILE;	if (random() < .5)		v1 = -1;	if (random() < .5)		v2 = -1;	self.velocity_x = 60*v1 + random()*40;	self.velocity_y = 60*v2 + random()*40;	T_RadiusDamage(self, self.owner, self.dmg, world);	doom_barrel_die1();};//END